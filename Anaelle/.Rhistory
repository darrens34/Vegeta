B<-list()
#Ajust
y<-donnees$SAP_FLOW
x<-donnees[,which(names(donnees)==i)]
# Plot obs:
plot(y~x)
fit0<-NULL
fit0<-nls(y ~ A / ( 1 + exp (-((x - X0) / B))),start = list(A = 10, B = 3, X0 =20),algorithm="port")
A<-summary(fit0)$coef[1]
B<-summary(fit0)$coef[2]
X0<-summary(fit0)$coef[3]
x<-min(x,na.rm=T):max(x,na.rm=T)
points(A / ( 1 + exp (-((x - X0) / B)))~x,type="l",col="red",lwd=4)
#### Transformer TA
trans <- A / ( 1 + exp (-((donnees$i - X0) / B)))
plot(donnees$SAP_FLOW~trans)
trans_nom <- paste0(i,"_trans")
donnees$trans_nom<-trans
}
trans
for (i in c("TA", "H_1h30", "LE_30m", "SB", "G", "VPD")){
# Parametres à estimer :
A<-list()
X0<-list()
B<-list()
#Ajust
y<-donnees$SAP_FLOW
x<-donnees[,which(names(donnees)==i)]
# Plot obs:
plot(y~x)
fit0<-NULL
fit0<-nls(y ~ A / ( 1 + exp (-((x - X0) / B))),start = list(A = 10, B = 3, X0 =20),algorithm="port")
A<-summary(fit0)$coef[1]
B<-summary(fit0)$coef[2]
X0<-summary(fit0)$coef[3]
x<-min(x,na.rm=T):max(x,na.rm=T)
points(A / ( 1 + exp (-((x - X0) / B)))~x,type="l",col="red",lwd=4)
#### Transformer TA
trans <- A / ( 1 + exp (-((donnees[,which(names(donnees)==i)]- X0) / B)))
plot(donnees$SAP_FLOW~trans)
trans_nom <- paste0(i,"_trans")
donnees$trans_nom<-trans
}
plot(SAP_FLOW~LE_30m,data=donnees)
plot(SAP_FLOW~SB,data=donnees)
plot(SAP_FLOW~G,data=donnees)
plot(SAP_FLOW~VPD,data=donnees)
compt=0
for (i in c("TA", "H_1h30", "LE_30m", "SB", "G", "VPD")){
compt=compt+1
# Parametres à estimer :
A<-c(9,9,9,9,9,9)
X0<-c(20,1,100,10,5,1)
B<-c(3,0,0,-10,-10,0)
#Ajust
y<-donnees$SAP_FLOW
x<-donnees[,which(names(donnees)==i)]
# Plot obs:
plot(y~x)
fit0<-NULL
fit0<-nls(y ~ A / ( 1 + exp (-((x - X0) / B))),start = list(A = A[compt], B = B[compt], X0 =X0[compt]),algorithm="port")
A[compt]<-summary(fit0)$coef[1]
B[compt]<-summary(fit0)$coef[2]
X0[compt]<-summary(fit0)$coef[3]
x<-min(x,na.rm=T):max(x,na.rm=T)
points(A[compt] / ( 1 + exp (-((x - X0[compt]) / B[compt])))~x,type="l",col="red",lwd=4)
#### Transformer TA
trans <- A[compt] / ( 1 + exp (-((donnees[,which(names(donnees)==i)]- X0[compt]) / B[compt])))
plot(donnees$SAP_FLOW~trans)
trans_nom <- paste0(i,"_trans")
donnees$trans_nom<-trans
}
i
A
y
x
plot(y~x)
fit0<-NULL
fit0<-nls(y ~ A / ( 1 + exp (-((x - X0) / B))),start = list(A = A[compt], B = B[compt], X0 =X0[compt]),algorithm="port")
A[compt]
B[compt]
X0[compt]
x
i
c("TA", "H_1h30", "LE_30m", "SB", "G", "VPD")
compt=0
for (i in c("TA", "H_1h30", "LE_30m", "SB", "G", "VPD")){
compt=compt+1
# Parametres à estimer :
A<-c(9,9,9,9,9,9)
X0<-c(20,100,100,10,5,1)
B<-c(3,-100,0,-10,-10,0)
#Ajust
y<-donnees$SAP_FLOW
x<-donnees[,which(names(donnees)==i)]
# Plot obs:
plot(y~x)
fit0<-NULL
fit0<-nls(y ~ A / ( 1 + exp (-((x - X0) / B))),start = list(A = A[compt], B = B[compt], X0 =X0[compt]),algorithm="port")
A[compt]<-summary(fit0)$coef[1]
B[compt]<-summary(fit0)$coef[2]
X0[compt]<-summary(fit0)$coef[3]
x<-min(x,na.rm=T):max(x,na.rm=T)
points(A[compt] / ( 1 + exp (-((x - X0[compt]) / B[compt])))~x,type="l",col="red",lwd=4)
#### Transformer TA
trans <- A[compt] / ( 1 + exp (-((donnees[,which(names(donnees)==i)]- X0[compt]) / B[compt])))
plot(donnees$SAP_FLOW~trans)
trans_nom <- paste0(i,"_trans")
donnees$trans_nom<-trans
}
i
names(donnees)
for (i in names(donnees)){
plot(donnees$SAP_FLOW~donnees[,which(names(donnees)==i)])
}
for (i in names(donnees)){
plot(donnees$SAP_FLOW~donnees[,which(names(donnees)==i)],xlab=i)
}
# Importer les données:
path<-"F:/MIASHS/TER/Vegeta/data/data_brut/Puechabon_2010_vpd.csv"
donnees <- read.table(path,sep=",",dec=",",header=T,na.strings = c("-9999","NA"))
head(donnees)
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
# Nettoyage valeurs bizarre de PA
donnees<-donnees[-which(as.numeric(donnees$PA) < 96),]
# Enleve lignes ou NA dans sap flow
donnees<-donnees[-which(is.na(donnees$SAP_FLOW)),]
# supprime colonnes inutiles
donnees = donnees[,-which(colnames(donnees)=="X")]# supprime premier colonne d'index
# Pas PRI la nuit : On supprime la colonne
donnees = donnees[,-which(colnames(donnees)=="PRI")]
summary(donnees)
# Correlation pour choisir le decalage pour chaque variable
sub_donnees = donnees[,-which(colnames(donnees)%in% c("TIMESTAMP_START","TIMESTAMP_END","DTime","dates","heure_solaire"))]
for(i in 1:ncol(sub_donnees)){
sub_donnees[,i]<-as.numeric(as.character(sub_donnees[,i]))
}
h0 <- cor(sub_donnees[,-which(colnames(sub_donnees)%in% c("SAP_FLOW"))],sub_donnees$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h0) <- "SAP_FLOW"
h0 <- rbind(h0, "decalage"= 0)
sub_donnees_30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-1],sub_donnees[-nrow(sub_donnees),-which(colnames(sub_donnees)=="SAP_FLOW")])
h30 <- cor(sub_donnees_30[,-which(colnames(sub_donnees_30)%in% c("SAP_FLOW"))],sub_donnees_30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h30) <- "SAP_FLOW"
h30 <- rbind(h30, "decalage"= 30)
sub_donnees_1h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2)],sub_donnees[-c(nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h1 <- cor(sub_donnees_1h[,-which(colnames(sub_donnees_1h)%in% c("SAP_FLOW"))],sub_donnees_1h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h1) <- "SAP_FLOW"
h1 <- rbind(h1, "decalage"= 60)
sub_donnees_1h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3)],sub_donnees[-c(nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h130 <- cor(sub_donnees_1h30[,-which(colnames(sub_donnees_1h30)%in% c("SAP_FLOW"))],sub_donnees_1h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h130) <- "SAP_FLOW"
h130 <- rbind(h130, "decalage"= 90)
sub_donnees_2h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4)],sub_donnees[-c(nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h2 <- cor(sub_donnees_2h[,-which(colnames(sub_donnees_2h)%in% c("SAP_FLOW"))],sub_donnees_2h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h2) <- "SAP_FLOW"
h2 <- rbind(h2, "decalage"= 120)
sub_donnees_2h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5)],sub_donnees[-c(nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h230 <- cor(sub_donnees_2h30[,-which(colnames(sub_donnees_2h30)%in% c("SAP_FLOW"))],sub_donnees_2h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h230) <- "SAP_FLOW"
h230 <- rbind(h230, "decalage"= 150)
sub_donnees_3h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5,6)],sub_donnees[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h3 <- cor(sub_donnees_3h[,-which(colnames(sub_donnees_3h)%in% c("SAP_FLOW"))],sub_donnees_3h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h3) <- "SAP_FLOW"
h3 <- rbind(h3, "decalage"= 180)
les_cor<-data.frame(h0,h30,h1,h130,h2,h230,h3)
decalage <- NA
for (i in 1:nrow(les_cor)){
decalage[i]<-les_cor["decalage",][which.max(les_cor[i,])]
}
decalage
les_cor
abs(les_cor[i,]))
abs(les_cor[i,])
decalage <- NA
for (i in 1:nrow(les_cor)){
decalage[i]<-les_cor["decalage",][which.max(abs(les_cor[i,]))]
}
decalage
head(sub_donnees)
les_cor
path<-"F:/MIASHS/TER/Vegeta/data/data_brut/Puechabon_2010_vpd.csv"
donnees <- read.table(path,sep=",",dec=",",header=T,na.strings = c("-9999","NA"))
head(donnees)
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
# Nettoyage valeurs bizarre de PA
donnees<-donnees[-which(as.numeric(donnees$PA) < 96),]
# Enleve lignes ou NA dans sap flow
donnees<-donnees[-which(is.na(donnees$SAP_FLOW)),]
# supprime colonnes inutiles
donnees = donnees[,-which(colnames(donnees)=="X")]# supprime premier colonne d'index
# Pas PRI la nuit : On supprime la colonne
donnees = donnees[,-which(colnames(donnees)=="PRI")]
summary(donnees)
# Correlation pour choisir le decalage pour chaque variable
sub_donnees = donnees[,-which(colnames(donnees)%in% c("TIMESTAMP_START","TIMESTAMP_END","DTime","dates","heure_solaire"))]
for(i in 1:ncol(sub_donnees)){
sub_donnees[,i]<-as.numeric(as.character(sub_donnees[,i]))
}
h0 <- cor(sub_donnees[,-which(colnames(sub_donnees)%in% c("SAP_FLOW"))],sub_donnees$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h0) <- "SAP_FLOW"
h0 <- rbind(h0, "decalage"= 0)
sub_donnees_30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-1],sub_donnees[-nrow(sub_donnees),-which(colnames(sub_donnees)=="SAP_FLOW")])
h30 <- cor(sub_donnees_30[,-which(colnames(sub_donnees_30)%in% c("SAP_FLOW"))],sub_donnees_30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h30) <- "SAP_FLOW"
h30 <- rbind(h30, "decalage"= 30)
sub_donnees_1h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2)],sub_donnees[-c(nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h1 <- cor(sub_donnees_1h[,-which(colnames(sub_donnees_1h)%in% c("SAP_FLOW"))],sub_donnees_1h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h1) <- "SAP_FLOW"
h1 <- rbind(h1, "decalage"= 60)
sub_donnees_1h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3)],sub_donnees[-c(nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h130 <- cor(sub_donnees_1h30[,-which(colnames(sub_donnees_1h30)%in% c("SAP_FLOW"))],sub_donnees_1h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h130) <- "SAP_FLOW"
h130 <- rbind(h130, "decalage"= 90)
sub_donnees_2h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4)],sub_donnees[-c(nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h2 <- cor(sub_donnees_2h[,-which(colnames(sub_donnees_2h)%in% c("SAP_FLOW"))],sub_donnees_2h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h2) <- "SAP_FLOW"
h2 <- rbind(h2, "decalage"= 120)
sub_donnees_2h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5)],sub_donnees[-c(nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h230 <- cor(sub_donnees_2h30[,-which(colnames(sub_donnees_2h30)%in% c("SAP_FLOW"))],sub_donnees_2h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h230) <- "SAP_FLOW"
h230 <- rbind(h230, "decalage"= 150)
sub_donnees_3h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5,6)],sub_donnees[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h3 <- cor(sub_donnees_3h[,-which(colnames(sub_donnees_3h)%in% c("SAP_FLOW"))],sub_donnees_3h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h3) <- "SAP_FLOW"
h3 <- rbind(h3, "decalage"= 180)
les_cor<-data.frame(h0,h30,h1,h130,h2,h230,h3)
decalage <- NA
for (i in 1:nrow(les_cor)){
decalage[i]<-les_cor["decalage",][which.max(abs(les_cor[i,]))]
}
# jeu final à la main  :
data = data.frame(SAP_FLOW = sub_donnees$SAP_FLOW[-c(1:6)],
dates = donnees$dates[-c(1:6)],
heure_solaire = donnees$heure_solaire[-c(1:6)],
NETRAD_1h30 = sub_donnees$NETRAD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
P_1h =  sub_donnees$P[-c(1:2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PA_3h =sub_donnees$PA[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_DIF_1h = sub_donnees$PPFD_DIF[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_IN_1h =  sub_donnees$PPFD_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_OUT_1h =  sub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
RH = sub_donnees$RH[-c(1:6)],
SW_IN_1h =  sub_donnees$SW_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
SW_OUT_30m = sub_donnees$SW_OUT[-c(1:5,nrow(sub_donnees))],
TA = sub_donnees$TA[-c(1:6)],
TS = sub_donnees$TS[-c(1:6)],
TS_2 = sub_donnees$TS_2[-c(1:6)],
TS_3 = sub_donnees$TS_3[-c(1:6)],
WD_1h30 = sub_donnees$WD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
WS = sub_donnees$WS[-c(1:6)],
CO2 =sub_donnees$CO2[-c(1:6)],
FC_1h =sub_donnees$FC[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
H_1h30 = sub_donnees$H[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
H2O_3h = sub_donnees$H2O[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
LE_30m =sub_donnees$LE[-c(1:5,nrow(sub_donnees))],
SB = sub_donnees$SB[-c(1:6)],
SC_3h = sub_donnees$SC[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SH_3h = sub_donnees$SH[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SLE_3h = sub_donnees$SLE[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
TAU_30m =sub_donnees$TAU[-c(1:5,nrow(sub_donnees))],
USTAR_30m =sub_donnees$USTAR[-c(1:5,nrow(sub_donnees))],
ZL_3h = sub_donnees$ZL[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
G = sub_donnees$G[-c(1:6)],
VPD = sub_donnees$VPD[-c(1:6)]
)
donnees$dates[-c(1:6)]
length(sub_donnees$NETRAD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))])
dates = donnees$dates[-c(1:6)],
heure_solaire = donnees$heure_solaire[-c(1:6)],
NETRAD_1h30 = sub_donnees$NETRAD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
P_1h =  sub_donnees$P[-c(1:2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PA_3h =sub_donnees$PA[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_DIF_1h = sub_donnees$PPFD_DIF[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_IN_1h =  sub_donnees$PPFD_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_OUT_1h =  sub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
RH = sub_donnees$RH[-c(1:6)],
SW_IN_1h =  sub_donnees$SW_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
SW_OUT_30m = sub_donnees$SW_OUT[-c(1:5,nrow(sub_donnees))],
TA = sub_donnees$TA[-c(1:6)],
TS = sub_donnees$TS[-c(1:6)],
TS_2 = sub_donnees$TS_2[-c(1:6)],
TS_3 = sub_donnees$TS_3[-c(1:6)],
WD_1h30 = sub_donnees$WD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
WS = sub_donnees$WS[-c(1:6)],
CO2 =sub_donnees$CO2[-c(1:6)],
FC_1h =sub_donnees$FC[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
H_1h30 = sub_donnees$H[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
H2O_3h = sub_donnees$H2O[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
LE_30m =sub_donnees$LE[-c(1:5,nrow(sub_donnees))],
SB = sub_donnees$SB[-c(1:6)],
SC_3h = sub_donnees$SC[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SH_3h = sub_donnees$SH[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SLE_3h = sub_donnees$SLE[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
TAU_30m =sub_donnees$TAU[-c(1:5,nrow(sub_donnees))],
USTAR_30m =sub_donnees$USTAR[-c(1:5,nrow(sub_donnees))],
ZL_3h = sub_donnees$ZL[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
G = sub_donnees$G[-c(1:6)],
VPD = sub_donnees$VPD[-c(1:6)]
data = data.frame(SAP_FLOW = sub_donnees$SAP_FLOW[-c(1:6)],
dates = donnees$dates[-c(1:6)],
heure_solaire = donnees$heure_solaire[-c(1:6)],
NETRAD_1h30 = sub_donnees$NETRAD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
P_1h =  sub_donnees$P[-c(1:2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PA_3h =sub_donnees$PA[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_DIF_1h = sub_donnees$PPFD_DIF[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_IN_1h =  sub_donnees$PPFD_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_OUT_1h =  sub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
RH = sub_donnees$RH[-c(1:6)],
SW_IN_1h =  sub_donnees$SW_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
SW_OUT_30m = sub_donnees$SW_OUT[-c(1:5,nrow(sub_donnees))],
TA = sub_donnees$TA[-c(1:6)],
TS = sub_donnees$TS[-c(1:6)],
TS_2 = sub_donnees$TS_2[-c(1:6)],
TS_3 = sub_donnees$TS_3[-c(1:6)],
WD_1h30 = sub_donnees$WD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
WS = sub_donnees$WS[-c(1:6)],
CO2 =sub_donnees$CO2[-c(1:6)],
FC_1h =sub_donnees$FC[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
H_1h30 = sub_donnees$H[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
H2O_3h = sub_donnees$H2O[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
LE_30m =sub_donnees$LE[-c(1:5,nrow(sub_donnees))],
SB = sub_donnees$SB[-c(1:6)],
SC_3h = sub_donnees$SC[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SH_3h = sub_donnees$SH[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SLE_3h = sub_donnees$SLE[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
TAU_30m =sub_donnees$TAU[-c(1:5,nrow(sub_donnees))],
USTAR_30m =sub_donnees$USTAR[-c(1:5,nrow(sub_donnees))],
ZL_3h = sub_donnees$ZL[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
G = sub_donnees$G[-c(1:6)],
VPD = sub_donnees$VPD[-c(1:6)]
)
length(sub_donnees$G[-c(1:6)])
length(sub_donnees$ZL[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))])
length(sub_donnees$SB[-c(1:6)])
length(ub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))])
length(sub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))])
length( sub_donnees$P[-c(1:2,nrow(sub_donnees)-1,nrow(sub_donnees))])
path<-"F:/MIASHS/TER/Vegeta/data/data_brut/Puechabon_2010_vpd.csv"
donnees <- read.table(path,sep=",",dec=",",header=T,na.strings = c("-9999","NA"))
head(donnees)
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
# Nettoyage valeurs bizarre de PA
donnees<-donnees[-which(as.numeric(donnees$PA) < 96),]
# Enleve lignes ou NA dans sap flow
donnees<-donnees[-which(is.na(donnees$SAP_FLOW)),]
# supprime colonnes inutiles
donnees = donnees[,-which(colnames(donnees)=="X")]# supprime premier colonne d'index
# Pas PRI la nuit : On supprime la colonne
donnees = donnees[,-which(colnames(donnees)=="PRI")]
summary(donnees)
# Correlation pour choisir le decalage pour chaque variable
sub_donnees = donnees[,-which(colnames(donnees)%in% c("TIMESTAMP_START","TIMESTAMP_END","DTime","dates","heure_solaire"))]
for(i in 1:ncol(sub_donnees)){
sub_donnees[,i]<-as.numeric(as.character(sub_donnees[,i]))
}
h0 <- cor(sub_donnees[,-which(colnames(sub_donnees)%in% c("SAP_FLOW"))],sub_donnees$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h0) <- "SAP_FLOW"
h0 <- rbind(h0, "decalage"= 0)
sub_donnees_30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-1],sub_donnees[-nrow(sub_donnees),-which(colnames(sub_donnees)=="SAP_FLOW")])
h30 <- cor(sub_donnees_30[,-which(colnames(sub_donnees_30)%in% c("SAP_FLOW"))],sub_donnees_30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h30) <- "SAP_FLOW"
h30 <- rbind(h30, "decalage"= 30)
sub_donnees_1h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2)],sub_donnees[-c(nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h1 <- cor(sub_donnees_1h[,-which(colnames(sub_donnees_1h)%in% c("SAP_FLOW"))],sub_donnees_1h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h1) <- "SAP_FLOW"
h1 <- rbind(h1, "decalage"= 60)
sub_donnees_1h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3)],sub_donnees[-c(nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h130 <- cor(sub_donnees_1h30[,-which(colnames(sub_donnees_1h30)%in% c("SAP_FLOW"))],sub_donnees_1h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h130) <- "SAP_FLOW"
h130 <- rbind(h130, "decalage"= 90)
sub_donnees_2h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4)],sub_donnees[-c(nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h2 <- cor(sub_donnees_2h[,-which(colnames(sub_donnees_2h)%in% c("SAP_FLOW"))],sub_donnees_2h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h2) <- "SAP_FLOW"
h2 <- rbind(h2, "decalage"= 120)
sub_donnees_2h30 = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5)],sub_donnees[-c(nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h230 <- cor(sub_donnees_2h30[,-which(colnames(sub_donnees_2h30)%in% c("SAP_FLOW"))],sub_donnees_2h30$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h230) <- "SAP_FLOW"
h230 <- rbind(h230, "decalage"= 150)
sub_donnees_3h = cbind(SAP_FLOW=sub_donnees$SAP_FLOW[-c(1,2,3,4,5,6)],sub_donnees[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees)),-which(colnames(sub_donnees)=="SAP_FLOW")])
h3 <- cor(sub_donnees_3h[,-which(colnames(sub_donnees_3h)%in% c("SAP_FLOW"))],sub_donnees_3h$SAP_FLOW,method="pearson",use = "pairwise.complete.obs")
colnames(h3) <- "SAP_FLOW"
h3 <- rbind(h3, "decalage"= 180)
les_cor<-data.frame(h0,h30,h1,h130,h2,h230,h3)
decalage <- NA
for (i in 1:nrow(les_cor)){
decalage[i]<-les_cor["decalage",][which.max(abs(les_cor[i,]))]
}
# jeu final à la main  :
data = data.frame(SAP_FLOW = sub_donnees$SAP_FLOW[-c(1:6)],
dates = donnees$dates[-c(1:6)],
heure_solaire = donnees$heure_solaire[-c(1:6)],
NETRAD_1h30 = sub_donnees$NETRAD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
P_1h =  sub_donnees$P[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PA_3h = sub_donnees$PA[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_DIF_1h = sub_donnees$PPFD_DIF[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_IN_1h =  sub_donnees$PPFD_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
PPFD_OUT_1h =  sub_donnees$PPFD_OUT[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
RH = sub_donnees$RH[-c(1:6)],
SW_IN_1h =  sub_donnees$SW_IN[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
SW_OUT_30m = sub_donnees$SW_OUT[-c(1:5,nrow(sub_donnees))],
TA = sub_donnees$TA[-c(1:6)],
TS = sub_donnees$TS[-c(1:6)],
TS_2 = sub_donnees$TS_2[-c(1:6)],
TS_3 = sub_donnees$TS_3[-c(1:6)],
WD_1h30 = sub_donnees$WD[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
WS = sub_donnees$WS[-c(1:6)],
CO2 =sub_donnees$CO2[-c(1:6)],
FC_1h =sub_donnees$FC[-c(1:4,nrow(sub_donnees)-1,nrow(sub_donnees))],
H_1h30 = sub_donnees$H[-c(1:3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
H2O_3h = sub_donnees$H2O[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
LE_30m =sub_donnees$LE[-c(1:5,nrow(sub_donnees))],
SB = sub_donnees$SB[-c(1:6)],
SC_3h = sub_donnees$SC[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SH_3h = sub_donnees$SH[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
SLE_3h = sub_donnees$SLE[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
TAU_30m =sub_donnees$TAU[-c(1:5,nrow(sub_donnees))],
USTAR_30m =sub_donnees$USTAR[-c(1:5,nrow(sub_donnees))],
ZL_3h = sub_donnees$ZL[-c(nrow(sub_donnees)-5,nrow(sub_donnees)-4,nrow(sub_donnees)-3,nrow(sub_donnees)-2,nrow(sub_donnees)-1,nrow(sub_donnees))],
G = sub_donnees$G[-c(1:6)],
VPD = sub_donnees$VPD[-c(1:6)]
)
X = data[,-which(names(data) %in% c("SAP_FLOW","dates","heure_solaire"))]
var_heure<-NULL
for (i in levels(data$heure_solaire)){
vec = NULL
for(j in names(X)){
vec=c(vec,mean(X[data$heure_solaire==i,j],na.rm=TRUE))
}
var_heure<-cbind(var_heure,vec)
}
var_heure<-as.data.frame(var_heure)
colnames(var_heure)<-levels(data$heure_solaire)
rownames(var_heure)<-names(X)
write.csv(var_heure,"F:/MIASHS/TER/Vegeta/data/data_pour_visu_nabil/Puechabon/par_heure/X_par_heure.csv")
sample <- sample.int(n = nrow(data), size = round(nrow(data)*70/100,0), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
# Sauvegarde des données :
write.csv(train,"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_train.csv")
write.csv(test,"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_test.csv")
library(leaps)
?regsubsets
######### ######### #########
######### importer et transformer les données
######### ######### #########
############# Importer les données
path<-"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_train.csv"
donnes_train<-read.table(path,sep=",",dec=".",header=T,na.strings = c("-9999","NA"))
donnes_train$type<-"train"
path<-"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_test.csv"
donnes_test<-read.table(path,sep=",",dec=".",header=T,na.strings = c("-9999","NA"))
donnes_test$type<-"test"
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
summary(donnes_train)
donnes_train = donnes_train[,-which(colnames(donnes_train)=="X")]# supprime premier colonne d'index
#############  Transforme les dates
donnes_train$dates = strptime(donnes_train$date,format = "%Y-%m-%d %H:%M:%S")
donnes_train$heure_solaire = strptime(donnes_train$heure_solaire,format = "%H:%M")
#############  Supprime colonnes inutiles pour le moment
donnees<- donnes_train[,-which(names(donnes_train) %in% c("dates","heure_solaire","type"))]
# On enlève PRI car on a pas de mesure la nuit! Pas possible de prédire avec les NA ensuite :(
#donnees = donnees[,-which(colnames(donnees)=="PRI")]
######### ######### #########
######### Regarde les correlations entre variables
######### ######### #########
corDF = cor(donnees,use="complete.obs")
dissimilarity <- 1 - abs(corDF)
distance <- as.dist(dissimilarity)
hc <- hclust(distance)
clusterV = cutree(hc,h=0.10) # On coupe à 90% de similarité
print(clusterV)
cor(donnees$SAP_FLOW,donnees[,-which(colnames(donnees)=="SAP_FLOW")],use="complete.obs")
cor(donnees$SAP_FLOW,donnees[,-which(colnames(donnees)=="SAP_FLOW")],use="complete.obs")
#############  Suppression des colonnes suivantes:
donnees<- donnees[,-which(names(donnees) %in% c("NETRAD_1h30","PPFD_OUT_1h"	,"SW_IN_1h","SW_OUT_30m"	,"TS_2","TS_3","TAU_30m","G","RH"))]
mod1 = regsubsets(SAP_FLOW ~  ., data = donnees,method = "exhaustive",nvmax=ncol(donnees)-1)
plot(mod1, scale = "bic")
obj_mod1 = summary(mod1)
res_mod1 = obj_mod1$which[which.min(obj_mod1$bic),]*1
sum(res_mod1) # nb de variables retenues
res_mod1
summary(lm(SAP_FLOW ~  PPFD_IN_1h + TA+ TS +  WD_1h30+CO2+
FC_1h + LE_30m + SH_3h + ZL_3h + VPD , data = donnees))
mod = lm(SAP_FLOW ~  PPFD_IN_1h + TA+ TS +  WD_1h30+CO2+
FC_1h + LE_30m + SH_3h + ZL_3h + VPD , data = donnees))
mod = lm(SAP_FLOW ~  PPFD_IN_1h + TA+ TS +  WD_1h30+CO2+
FC_1h + LE_30m + SH_3h + ZL_3h + VPD , data = donnees)
summary(mod)
write.csv(donnees,"Puechabon_2010_post_model.csv")
path<-"F:/MIASHS/TER/Vegeta/data/data_post_modelisation/Puechabon_2010_post_model.csv"
donnees <- read.table(path,sep=",",dec=".",header=T)
head(donnees)
summary(donnees)
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
donnees = donnees[,-which(colnames(donnees)=="X")]
X = donnees[,-which(names(donnees) %in% c("SAP_FLOW"))]
mod<-lm(SAP_FLOW ~  PPFD_IN_1h + TA+ TS +  WD_1h30+CO2+
FC_1h + LE_30m + SH_3h + ZL_3h + VPD , data = donnees)
summary(mod)
path<-"F:/MIASHS/TER/Vegeta/data/data_pour_visu_nabil/Puechabon/par_heure/X_par_heure.csv"
X <- read.table(path,sep=",",dec=".",header=T,row.names = 1)
head(X)
plot(predict.lm(mod,newdata=as.data.frame(t(X)))~seq(0,23.50,0.50),ylab="Flux de sève predit",xlab="Heure solaire",type="l",col="darkgreen")
write.csv(data.frame(predict.lm(mod,newdata=as.data.frame(t(X)))),"y_predit_par_heure.csv")
coef<-round(mod$coefficients,4)
equation_modele_global <- paste("Flux de sève = ",coef[1]," + ",coef[2]," PPFD_DIF_1h + ",coef[3],"  TA + ",coef[4]," TS + ",
coef[5]," WD_1h30 + ",coef[6],"  CO2 + ",coef[7]," FC_1h + ",coef[8]," LE_30m + ",
coef[9]," SH_3h + ",coef[10]," ZL_3H + ",coef[11]," VPD")
equation_modele_global
coef
equation_modele_global <- paste("Flux de sève = ",coef[1]," + ",coef[2]," PPFD_IN_1h + ",coef[3],"  TA + ",coef[4]," TS + ",
coef[5]," WD_1h30 + ",coef[6],"  CO2 + ",coef[7]," FC_1h + ",coef[8]," LE_30m + ",
coef[9]," SH_3h + ",coef[10]," ZL_3H + ",coef[11]," VPD")
