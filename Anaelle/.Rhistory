modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DEC_D212||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(C12_PMEN_CS3||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(P12_RP_100M2P||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(P12_ANEM_RP_GRAT||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(P12_RSECOCC||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(C12_PMEN_CS5||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer)
ypred = predict(modlmer,test)
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
ypred = predict(modlmer,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.14703
modfinal = lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
summary(modfinal)
"""
Anaelle Dambreville & Sara Thomas
Consignes :
# Découpage en classe 1
Pop 0-14 ans en 2012 (princ)
Pop 15-29 ans en 2012 (princ)
Pop 30-44 ans en 2012 (princ)
Pop 45-59 ans en 2012 (princ)
Pop 60-74 ans en 2012 (princ)
Pop 75 ans ou plus en 2012 (princ)
# Hommes
# Variable réponse : Taux de participation
Nous avons structuré notre script R de cette façon :
1) Importation des librairies
2) Importation et nettoyage des données
3) Premier essai de selection des variables en utilisant tous les régresseurs
4) Suppression de la colinéarité entre les variables
5) Séparation en train/test
6) Modèle sur un sous ensemble de regresseurs sélectionnés grâce au BIC
6-1) Ajout de la variable aléatoire à la fin
6-2) Ajout de la variable aléatoire au début
7) Modèle sur un sous ensemble de regresseurs sélectionnés grâce à leur corrélation avec la variable réponse
7-1) Ajout de la variable aléatoire à la fin
7-2) Ajout de la variable aléatoire au début
8) Ajout d'un effet aléatoire sur la pente
9) Conclusion et interprétation
"""
####################################################################################################################
############ 1) Importation des librairies
####################################################################################################################
library(lme4) # lmer
library(stringr) # sub
library(leaps) # regsubsets
####################################################################################################################
############ 2) Importation et nettoyage des données
####################################################################################################################
path<-"F:/MIASHS/UEs/donnees_de_panel/projet/Table_Intersection_BV_IRIS_2012_Pres_All3.csv"
donnees <- read.table(path,sep=";",dec=",",header=T)
head(donnees)
str(donnees)
summary(donnees)
dim(donnees) # 9945 lignes et 465 colonnes
##### Suppression des erreurs dans la base de données
for(col in colnames(donnees)){donnees[which(donnees[,col]=="Err :520"),col]<-NaN}
##### Changement du nom de la variable réponse
colnames(donnees)[which(colnames(donnees)=="X._VOTANTS")] <- "Taux_participation"
# suppression des lignes où il y a des Na pour la variable réponse :
donnees <- donnees[-which(is.na(donnees$Taux_participation)==TRUE),]
##### Transformation en numérique des colonnes qui ont été mal importées:
for(col in colnames(donnees)){donnees[,col]<-sub(",",".",donnees[,col])}
for(col in colnames(donnees)[-which(colnames(donnees) %in% c("Bureau_de_vote","Tour","insee_com","nom_com",
"iris","code_iris","nom_iris","typ_iris","code_type_iris"))])
{donnees[,col]<-as.numeric(donnees[,col])}
##### Pour les facteurs, transformation en facteur :
for(col in c("Bureau_de_vote","Tour","insee_com","nom_com","iris","code_iris","nom_iris","typ_iris","code_type_iris"))
{donnees[,col]<-as.factor(donnees[,col])}
##### Suppression des variables non étudiées dans notre cas (se référer aux consignes).
donnees = donnees[,which(colnames(donnees) %in% c("P12_POP1564","P12_POP1524", "P12_POP2554","P12_POP5564","P12_H1564",
"P12_F1564","P12_F1524","P12_F2554","P12_F5564","P12_ACT1564","P12_ACT1524",
"P12_ACT2554", "P12_ACT5564", "P12_HACT1564",
"P12_FACT1564", "P12_FACT1524","P12_FACT2554", "P12_FACT5564",
"P12_ACTOCC1564","P12_ACTOCC1524", "P12_ACTOCC2554","P12_ACTOCC5564",
"P12_HACTOCC1564", "P12_FACTOCC1564","P12_FACTOCC1524", "P12_FACTOCC2554",
"P12_FACTOCC5564", "P12_CHOM1564",
"P12_HCHOM1564","P12_FCHOM1564","P12_INACT1564",
"P12_FINACT1564","P12_ETUD1564", "P12_FETUD1564", "P12_RETR1564",
"P12_FRETR1564", "P12_AINACT1564","P12_FAINACT1564",
"P12_ACTOCC15P", "P12_FACTOCC15P", "P12_SAL15P",
"P12_FSAL15P", "P12_HNSAL15P", "P12_FNSAL15P", "P12_SAL15P_TP",
"P12_FSAL15P_TP","C12_MENFSEUL","C12_PMEN_MENFSEUL",
"P12_NSCOL15P", "P12_NSCOL15P_DIPL0", "P12_NSCOL15P_CEP",
"P12_NSCOL15P_BEPC","P12_NSCOL15P_CAPBEP", "P12_NSCOL15P_BAC",
"P12_NSCOL15P_BACP2","P12_NSCOL15P_SUP",
"P12_FNSCOL15P", "P12_FNSCOL15P_DIPL0","P12_FNSCOL15P_CEP",
"P12_FNSCOL15P_BEPC","P12_FNSCOL15P_CAPBEP","P12_FNSCOL15P_BAC",
"P12_FNSCOL15P_BACP2", "P12_FNSCOL15P_SUP", "P12_POP",
"P12_POP0002", "P12_POP0305", "P12_POP0610", "P12_POP1117",
"P12_POP1824", "P12_POP2539", "P12_POP4054","P12_POP5564",
"P12_POP6579", "P12_POP80P","P12_POP0014","P12_POP1529",
"P12_POP3044", "P12_POP4559","P12_POP6074","P12_POP75P",
"P12_POP0019", "P12_POP2064","P12_POP65P","P12_POPH",
"P12_H0019","P12_H2064","P12_H65P","P12_POPF","P12_F0014",
"P12_F1529", "P12_F3044","P12_F4559","P12_F6074", "P12_F75P",
"P12_F0019","P12_F2064","P12_F65P","C12_POP15P", "C12_POP15P_CS1",
"C12_POP15P_CS2", "C12_POP15P_CS3", "C12_POP15P_CS4", "C12_POP15P_CS5",
"C12_POP15P_CS6", "C12_POP15P_CS7","C12_POP15P_CS8","C12_H15P",
"C12_F15P", "C12_F15P_CS1", "C12_F15P_CS2", "C12_F15P_CS3","C12_F15P_CS4",
"C12_F15P_CS5", "C12_F15P_CS6","C12_F15P_CS7","C12_F15P_CS8") == FALSE)]
dim(donnees) # Il y a encore 349 colonnes.
corDF = cor(donnees[,-c(1:21)],use="complete.obs") # Corrélation entre régresseurs
dissimilarity <- 1 - abs(corDF)
distance <- as.dist(dissimilarity)
hc <- hclust(distance)
clusterV = cutree(hc,h=0.05) # On coupe à 95% de similarité
clusterV=as.data.frame(clusterV)
clusterV
subset_variable=""
for(i in 1:max(clusterV$clusterV)){
var_group=rownames(clusterV)[clusterV$clusterV==i]
subset_variable=c(subset_variable,var_group[which.max(abs(cor(y=donnees[,"Taux_participation"],x=donnees[,var_group],use = "complete")))])
}
subset_variable=subset_variable[-1] # On a encore 114 variables!
subset_variable
dataset=donnees[,c("Bureau_de_vote","Tour","Taux_participation","insee_com","typ_iris",subset_variable)]
modlm<-lm(Taux_participation ~ Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM + RSA_SOCLE_Majore_Pers_couv +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_RP_100M2P+ P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # 35176.27
set.seed(23)
sample <- sample.int(n = nrow(dataset), size = round(nrow(dataset)*70/100,0), replace = F)
train <- dataset[sample, ] # 70 %
test  <- dataset[-sample, ] # 30 %
modlm<-lm(Taux_participation ~ Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM + RSA_SOCLE_Majore_Pers_couv +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_RP_100M2P+ P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # 35176.27
summary(modlm)
levels(insee_com)
levels(dataset$insee_com)
modlm<-lm(Taux_participation ~ Tour  + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # BIC 35161.83
modlm<-lm(Taux_participation ~ Tour + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM + RSA_SOCLE_Majore_Pers_couv +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_RP_100M2P+ P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # 35176.27
modlm<-lm(Taux_participation ~ Tour  + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # BIC 36449.22
modlm<-lm(Taux_participation ~ Tour  +insee_com+ typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   ,data =train)
summary(modlm)
anova(modlm)
BIC(modlm) # BIC 36449.22
modlmer<-lmer(Taux_participation ~  Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF + (1|Bureau_de_vote),
data =train,REML=FALSE)
summary(modlmer) # BIC 31673.5
?lmer
library(lmerTest) # permet d'afficher les Pvalues
modlmer<-lmer(Taux_participation ~  Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF + (1|Bureau_de_vote),
data =train,REML=FALSE)
summary(modlmer) # BIC = 31673.5
modlmer<-lmer(Taux_participation ~  Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV +   proprietaire_ALF +
locataire_ALF + (1|Bureau_de_vote),
data =train,REML=FALSE)
summary(modlmer) # 31648.3
modlmer1<-lmer(Taux_participation ~  Tour + insee_com + typ_iris+ C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_HNSCOL15P_DIPL0 + P12_NPER_RP_LOCHLMV +   proprietaire_ALF +
locataire_ALF + (1|Bureau_de_vote),
data =train,REML=TRUE)
ypred = predict(modlmer1,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse
# RMSE = 2.15
modlmer<-lmer(Taux_participation ~ Tour + typ_iris+insee_com + C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM + RSA_SOCLE_Majore_Pers_couv +
P12_SAL15P_EMPAID+ P12_HNSCOL15P_DIPL0 + P12_RP_100M2P+ P12_NPER_RP_LOCHLMV + P12_RP_GARL +  proprietaire_ALF +
COUP_4plus_ENF +locataire_ALF   +(1|Bureau_de_vote),data =train,REML=FALSE)
summary(modlmer) # BIC 31688.1
modlmer<-lmer(Taux_participation ~ Tour + typ_iris+insee_com + C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_HNSCOL15P_DIPL0 +  P12_NPER_RP_LOCHLMV  +  proprietaire_ALF +
locataire_ALF   +(1|Bureau_de_vote),data =train,REML=FALSE)
summary(modlmer) # BIC 31661.8
modlmer2<-lmer(Taux_participation ~ Tour + typ_iris+insee_com + C12_H15P_CS8 + P12_POP15P_MARIE + C12_PMEN_CS8 +
P12_HNSCOL15P_CEP + P12_POP_IMM  +
P12_HNSCOL15P_DIPL0 +  P12_NPER_RP_LOCHLMV  +  proprietaire_ALF +
locataire_ALF   +(1|Bureau_de_vote),data =train,REML=TRUE)
ypred = predict(modlmer2,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.16
# On ordonne les variables en fonction de leur corrélation avec le taux de participation:
ordre = order(abs(cor(train$Taux_participation,train[-c(1:5)])),decreasing = TRUE)
# On récupère les 25 variables les plus corrélées au taux de participation :
var_max_cor = colnames(abs(cor(train$Taux_participation,train[-c(1:5)])))[ordre][1:25]
# Sous jeu de données :
trainsub = train[,c("Taux_participation","Tour","insee_com","typ_iris",var_max_cor)]
modlm<-lm(Taux_participation ~ .,data =trainsub)
summary(modlm)
anova(modlm)
BIC(modlm) # BIC = 35167.46
ancova(modlm)
modlm<-lm(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+locataire_ALF+P12_SAL15P_INTERIM+DEC_D212+
DISP_PPAT12+C12_PMEN_CS3+P12_HNSCOL15P_CAPBEP+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+DEC_PCHO12,data =trainsub)
summary(modlm)
anova(modlm)
BIC(modlm) # BIC = 35123.17
## Ajout du bureau de vote en effet aléatoire sur l'intercept :
trainsub = cbind(trainsub,"Bureau_de_vote" = train[,"Bureau_de_vote"])
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+locataire_ALF+P12_SAL15P_INTERIM+DEC_D212+
DISP_PPAT12+C12_PMEN_CS3+P12_HNSCOL15P_CAPBEP+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+DEC_PCHO12 +(1|Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer) # BIC 31672.0
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D212+C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC +(1|Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer) # BIC 31636.6
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC +(1|Bureau_de_vote),data =trainsub,REML=TRUE)
summary(modlmer) # BIC = 31636.6
ypred = predict(modlmer3,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.162157
modlmer3<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC +(1|Bureau_de_vote),data =trainsub,REML=TRUE)
summary(modlmer3) # BIC = 31636.6
ypred = predict(modlmer3,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.162157
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+DISP_PPFAM12+C12_PMEN_CS6+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+locataire_ALF+P12_SAL15P_INTERIM+DEC_D112+DEC_D212+
DISP_PPAT12+C12_PMEN_CS3+C12_NE24F4P+P12_SAL15P_EMPAID+P12_HNSCOL15P_CAPBEP+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+DEC_PCHO12+C12_PMEN_CS5+(1|Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer) # BIC 31669.1
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(1|Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer) # BIC 31597.7
modlmer4<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+ C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(1|Bureau_de_vote),data =trainsub,REML=TRUE)
ypred = predict(modlmer4,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.14703
modlmer<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+ C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=FALSE)
summary(modlmer) # BIC 31579.4
modlmer5<-lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+
C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
ypred = predict(modlmer5,test)
rmse <- sqrt(mean((test$Taux_participation - ypred)^2,na.rm=TRUE)) ; rmse # 2.143606
modfinal = lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
########## Interprétation
summary(modfinal)
mean(trainsub$Taux_participation)
2.15*100/81
summary(modfinal)
aggregate?
?aggregate
aggregate(Taux_participation ~ insee_com, data = trainsub, mean)
unique(donnees$typ_iris)
aggregate(Taux_participation ~ insee_com, data = trainsub, mean)
aggregate(Taux_participation ~ typ_iris, data = trainsub, mean)
summary(modfinal)
library("shiny", lib.loc="~/R/win-library/3.4")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "001-hello")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "001-hello")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "008_html")
runApp('F:/MIASHS/UEs/R/shiny/SuperAppli')
runApp('F:/MIASHS/UEs/R/shiny/SuperAppli')
ln(3000)
log(3000)
log(6633)
log(6.633)
log(6633)/log(6.633)
q = range(0,500)
q
q = range(0,500,step=1)
q
?range
q = range(0:500)
q = 1:500
q
6.633^q /
?fac
?fact
( 6.633^q / factoriel(q) ) exp(-6.633)
( 6.633^q / factoriel(q) ) * exp(-6.633)
( 6.633^q / factorial(q) ) * exp(-6.633)
plot(( 6.633^q / factorial(q) ) * exp(-6.633))
plot(( 6.633^q / factorial(q) ) * exp(-6.633),type= lag())
plot(( 6.633^q / factorial(q) ) * exp(-6.633),type= "l"
)
q = 1:100
plot(( 6.633^q / factorial(q) ) * exp(-6.633),type= "l")
0.8/200
library(lme4) # lmer
library(stringr) # sub
library(leaps) # regsubsets
?lmer
6/17
####################################################################################################################
############ 1) Importation des librairies
####################################################################################################################
library(lme4) # lmer
library(stringr) # sub
library(leaps) # regsubsets
####################################################################################################################
############ 2) Importation et nettoyage des données
####################################################################################################################
path<-"F:/MIASHS/UEs/donnees_de_panel/projet/Table_Intersection_BV_IRIS_2012_Pres_All3.csv"
donnees <- read.table(path,sep=";",dec=",",header=T)
head(donnees)
str(donnees)
summary(donnees)
dim(donnees)
# 9945 lignes et 465 colonnes
##### Suppression des erreurs dans la base de données
for(col in colnames(donnees)){donnees[which(donnees[,col]=="Err :520"),col]<-NaN}
##### Changement du nom de la variable réponse
colnames(donnees)[which(colnames(donnees)=="X._VOTANTS")] <- "Taux_participation"
# suppression des lignes où il y a des Na pour la variable réponse :
donnees <- donnees[-which(is.na(donnees$Taux_participation)==TRUE),]
##### Transformation en numérique des colonnes qui ont été mal importées
for(col in colnames(donnees)){donnees[,col]<-sub(",",".",donnees[,col])}
for(col in colnames(donnees)[-which(colnames(donnees) %in% c("Bureau_de_vote","Tour","insee_com","nom_com",
"iris","code_iris","nom_iris","typ_iris","code_type_iris"))])
{donnees[,col]<-as.numeric(donnees[,col])}
##### Pour les facteurs, transformation en facteur
for(col in c("Bureau_de_vote","Tour","insee_com","nom_com","iris","code_iris","nom_iris","typ_iris","code_type_iris"))
{donnees[,col]<-as.factor(donnees[,col])}
##### Suppression des variables non étudiées dans notre cas (se référer aux consignes)
donnees = donnees[,which(colnames(donnees) %in% c("P12_POP1564","P12_POP1524", "P12_POP2554","P12_POP5564",
"P12_H1564","P12_F1564","P12_F1524","P12_F2554","P12_F5564","P12_ACT1564","P12_ACT1524",
"P12_ACT2554", "P12_ACT5564", "P12_HACT1564",
"P12_FACT1564", "P12_FACT1524","P12_FACT2554", "P12_FACT5564",
"P12_ACTOCC1564","P12_ACTOCC1524", "P12_ACTOCC2554","P12_ACTOCC5564",
"P12_HACTOCC1564", "P12_FACTOCC1564","P12_FACTOCC1524", "P12_FACTOCC2554",
"P12_FACTOCC5564", "P12_CHOM1564",
"P12_HCHOM1564","P12_FCHOM1564","P12_INACT1564",
"P12_FINACT1564","P12_ETUD1564", "P12_FETUD1564", "P12_RETR1564",
"P12_FRETR1564", "P12_AINACT1564","P12_FAINACT1564",
"P12_ACTOCC15P", "P12_FACTOCC15P", "P12_SAL15P",
"P12_FSAL15P", "P12_HNSAL15P", "P12_FNSAL15P", "P12_SAL15P_TP",
"P12_FSAL15P_TP","C12_MENFSEUL","C12_PMEN_MENFSEUL",
"P12_NSCOL15P", "P12_NSCOL15P_DIPL0", "P12_NSCOL15P_CEP",
"P12_NSCOL15P_BEPC","P12_NSCOL15P_CAPBEP", "P12_NSCOL15P_BAC",
"P12_NSCOL15P_BACP2","P12_NSCOL15P_SUP",
"P12_FNSCOL15P", "P12_FNSCOL15P_DIPL0","P12_FNSCOL15P_CEP",
"P12_FNSCOL15P_BEPC","P12_FNSCOL15P_CAPBEP","P12_FNSCOL15P_BAC",
"P12_FNSCOL15P_BACP2", "P12_FNSCOL15P_SUP", "P12_POP",
"P12_POP0002", "P12_POP0305", "P12_POP0610", "P12_POP1117",
"P12_POP1824", "P12_POP2539", "P12_POP4054","P12_POP5564",
"P12_POP6579", "P12_POP80P","P12_POP0014","P12_POP1529",
"P12_POP3044", "P12_POP4559","P12_POP6074","P12_POP75P",
"P12_POP0019", "P12_POP2064","P12_POP65P","P12_POPH",
"P12_H0019","P12_H2064","P12_H65P","P12_POPF","P12_F0014",
"P12_F1529", "P12_F3044","P12_F4559","P12_F6074", "P12_F75P",
"P12_F0019","P12_F2064","P12_F65P","C12_POP15P", "C12_POP15P_CS1",
"C12_POP15P_CS2", "C12_POP15P_CS3", "C12_POP15P_CS4", "C12_POP15P_CS5",
"C12_POP15P_CS6", "C12_POP15P_CS7","C12_POP15P_CS8","C12_H15P",
"C12_F15P", "C12_F15P_CS1", "C12_F15P_CS2", "C12_F15P_CS3","C12_F15P_CS4",
"C12_F15P_CS5", "C12_F15P_CS6","C12_F15P_CS7","C12_F15P_CS8") == FALSE)]
dim(donnees)
# Après importation et nettoyage, notre jeu de données est composé de 9939 lignes (individus/iris)
# et 349 colonnes (variables).
corDF = cor(donnees[,-c(1:21)],use="complete.obs") # Corrélation entre régresseurs
dissimilarity <- 1 - abs(corDF)
distance <- as.dist(dissimilarity)
hc <- hclust(distance)
clusterV = cutree(hc,h=0.05) # On coupe à 95% de similarité
clusterV=as.data.frame(clusterV) ; clusterV # Affiche les groupes de corrélation        pour chaque variable
# Dans chaque groupe corrélé, on garde uniquement le régresseur le plus corrélé à notre variable réponse
subset_variable=""
for(i in 1:max(clusterV$clusterV)){
var_group=rownames(clusterV)[clusterV$clusterV==i]
subset_variable=c(subset_variable,var_group[which.max(abs(cor(y=donnees[,"Taux_participation"],
x=donnees[,var_group],use = "complete")))])
}
subset_variable=subset_variable[-1]
# Il nous reste 114 régresseurs après suppression des colinéarités.
##### Mise en place du dataset avec les variables d'intérêt uniquement
dataset=donnees[,c("Bureau_de_vote","Tour","Taux_participation","insee_com","typ_iris",subset_variable)]
####################################################################################################################
############ 5) Séparation en train / test
####################################################################################################################
# Séparer train (70%) et test (30%)
set.seed(23)
sample <- sample.int(n = nrow(dataset), size = round(nrow(dataset)*70/100,0), replace = F)
train <- dataset[sample, ] # 70 %
test  <- dataset[-sample, ] # 30 %
ordre = order(abs(cor(train$Taux_participation,train[-c(1:5)])),decreasing = TRUE)
# On récupère les 25 variables les plus corrélées au taux de participation
var_max_cor = colnames(abs(cor(train$Taux_participation,train[-c(1:5)])))[ordre][1:25]
# Sous jeu de données
trainsub = train[,c("Taux_participation","Tour","insee_com","typ_iris",var_max_cor)]
modfinal = lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
head(trainsub)
trainsub = cbind(trainsub,"Bureau_de_vote" = train[,"Bureau_de_vote"])
modfinal = lmer(Taux_participation ~ Tour+insee_com+typ_iris+DISP_PPMINI12+proprietaire_ALF+
P12_NPER_RP_LOCHLMV+RSA_SOCLE_Majore_Pers_couv+DEC_D112+DEC_D212+C12_PMEN_CS3+P12_RP_100M2P+
P12_ANEM_RP_GRAT+P12_RSECOCC+C12_PMEN_CS5+(DISP_PPMINI12||Bureau_de_vote),data =trainsub,REML=TRUE)
summary(modfinal)
install.packages("magrittr")
install.packages("magrittr")
install.packages(c("ade4", "backports", "BH", "bindr", "callr", "car", "cowplot", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "dotCall64", "ellipse", "fields", "forcats", "fpc", "ggpubr", "git2r", "glue", "haven", "hexbin", "hms", "htmlTable", "htmlwidgets", "httpuv", "igraph", "irlba", "knitr", "lazyeval", "lme4", "lubridate", "mclust", "mvtnorm", "openssl", "plot3D", "proxy", "quantreg", "Rcpp", "RcppEigen", "reprex", "reshape2", "rgl", "rJava", "rlang", "rmarkdown", "robustbase", "rprojroot", "scales", "scatterplot3d", "selectr", "spam", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "vegan", "viridis", "viridisLite", "withr", "XLConnect", "XLConnectJars", "XML", "xml2", "yaml", "zoo"))
install.packages("leaflet")
install.packages("sp")
install.packages("rgdal")
install.packages("leaflet.extras")
install.packages("data.tree")
install.packages("DiagrammeR")
install.packages("collapsibleTree")
?nls
30+52+292+801+85+318+327+109+193+251+195+187+290+104+107+117+115+92+119
36+21+126+53+98+30+29+157+91+341+70+120
library(leaps)
?regsubsets
######### ######### #########
######### importer et transformer les données
######### ######### #########
############# Importer les données
path<-"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_train.csv"
donnes_train<-read.table(path,sep=",",dec=".",header=T,na.strings = c("-9999","NA"))
donnes_train$type<-"train"
path<-"F:/MIASHS/TER/Vegeta/data/data_train_test/Puechabon_test.csv"
donnes_test<-read.table(path,sep=",",dec=".",header=T,na.strings = c("-9999","NA"))
donnes_test$type<-"test"
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
summary(donnes_train)
donnes_train = donnes_train[,-which(colnames(donnes_train)=="X")]# supprime premier colonne d'index
#############  Transforme les dates
donnes_train$dates = strptime(donnes_train$date,format = "%Y-%m-%d %H:%M:%S")
donnes_train$heure_solaire = strptime(donnes_train$heure_solaire,format = "%H:%M")
#############  Supprime colonnes inutiles pour le moment
donnees<- donnes_train[,-which(names(donnes_train) %in% c("dates","heure_solaire","type"))]
# On enlève PRI car on a pas de mesure la nuit! Pas possible de prédire avec les NA ensuite :(
#donnees = donnees[,-which(colnames(donnees)=="PRI")]
#############  Suppression des colonnes suivantes:
donnees<- donnees[,-which(names(donnees) %in% c("NETRAD_1h30","PPFD_OUT_1h"	,"SW_IN_1h","SW_OUT_30m"	,"TS_2","TS_3","TAU_30m","G","RH"))]
######### Selection du meilleur modele :
mod1 = regsubsets(SAP_FLOW ~  ., data = donnees,method = "exhaustive",nvmax=ncol(donnees)-1)
plot(mod1, scale = "bic")
obj_mod1 = summary(mod1)
res_mod1 = obj_mod1$which[which.min(obj_mod1$bic),]*1
sum(res_mod1) # nb de variables retenues
res_mod1
plot(mod1, scale = "bic")
