path<-"F:/MIASHS/UEs/regression_lin/ozone.csv"
donnees <- read.table(path,sep=";",dec=",",header=T)
head(donnees)
# 1
mod<-lm(maxO3 ~ maxO3v +T9 +T12 +Vx12 +Ne12 +Ne15,data=donnees)
summary(mod)
y<-donnees$maxO3
plot(residus~y)
plot(mod)
residus <- mod$residuals
plot(mod)
summary(mod)
y<-mod$fitted.values
plot(residus~y)
yfit<-mod$fitted.values
plot(residus~yfit)
for(i in 1:6)
{
plot(residus~donnees[,i],xlab=colnames(X)[i])
}
for(i in 1:6)
{
plot(residus~donnees[,i],xlab=colnames(donnees)[i])
}
abline(h=0)
y<-mod$fitted.values
plot(residus~y)
abline(h=0)
abline(h=0,lty="dashed",col="red")
y<-mod$fitted.values
plot(residus~y)
abline(h=0,lty="dashed",col="red")
plot(residus~y,pch=21)
abline(h=0,lty="dashed",col="red")
plot(residus~y,pch=18)
abline(h=0,lty="dashed",col="red")
plot(residus~y,pch=19)
abline(h=0,lty="dashed",col="red")
y<-donnees$maxO3
plot(residus~y,pch=19)
abline(h=0,lty="dashed",col="red")
X<-donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")]
head(X)
X<-donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")]
for(i in 1:6)
{
plot(residus~X[,i],xlab=colnames(X)[i])
}
residus <- mod$residuals
# 3
y<-donnees$maxO3
plot(residus~y,pch=19)
abline(h=0,lty="dashed",col="red")
X<-donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")]
for(i in 1:6)
{
plot(residus~X[,i],xlab=colnames(X)[i])
abline(h=0,lty="dashed",col="red")
}
X<-donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")]
for(i in 1:6)
{
plot(residus~X[,i],xlab=colnames(X)[i],pch=19)
abline(h=0,lty="dashed",col="red")
}
X<-as.matrix(X)
H<-X%*%solve(t(X)%*%X)%*%t(X)
H
dim(H)
nrows(donnees)
nrow(donnees)
X<-donnees[,c(rep(1,nrow(donnees)),"maxO3v","T9","T12","Vx12","Ne12","Ne15")]
X<-as.matrix(X)
H<-X%*%solve(t(X)%*%X)%*%t(X)
dim(H)
H
X<-c(rep(1,nrow(donnees),donnees[,"maxO3v","T9","T12","Vx12","Ne12","Ne15")])
X<-c(rep(1,nrow(donnees)),donnees[,"maxO3v","T9","T12","Vx12","Ne12","Ne15"])
X<-c(rep(1,nrow(donnees)),donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")])
X<-as.matrix(X)
H<-X%*%solve(t(X)%*%X)%*%t(X)
X
rep(1,nrow(donnees))
donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")]
X<-cbind(rep(1,nrow(donnees)),donnees[,c("maxO3v","T9","T12","Vx12","Ne12","Ne15")])
X
X<-as.matrix(X)
H<-X%*%solve(t(X)%*%X)%*%t(X)
dim(H)
H
diag(H)
plot(H)
Hii<-diag(H)
plot(Hii)
p=6
n<-dim(ozone)[1]
abline(h=2*(p+1)/n)
n=dim(ozone)[1]
n=dim(donnees)[1]
abline(h=2*(p+1)/n)
abline(h=2*(p+1)/n,col="red",lty="dashed")
plot(Hii)
p=6
n=dim(donnees)[1]
abline(h=2*(p+1)/n,col="red",lty="dashed")
rstand= residus / sqrt(var(residus)*(1-diag))
diag
rstand= residus / sqrt(var(residus)*(1-Hii))
rstand
plot(rstand)
abline(h=0,col="red",lty="dashed")
err_test<- residus/(1-Hii)
err_test
plot(err_tesr)
plot(err_test)
abline(h=0,col="red",lty="dashed")
PRESS<- sum(err_test^2)
PRESS
rstud <- rstand*sqrt((n-p-2)/(n-p-1-rstand^2))
rstud
plot(rstud)
abline(h=0,col="red",lty="dashed")
plot(rstud)
abline(h=c(-2,2),col="red",lty="dashed")
cook<-(Hii/(1-Hii)) * (rstand^2/(p+1))
cook
plot(cook)
plot(mod)
install.packages("leaps")
library(leaps)
?regsubsets
path<-"F:/MIASHS/UEs/regression_lin/ozone.csv"
donnees <- read.table(path,sep=";",dec=",",header=T)
head(donnees)
exemple = regsubsets(x = maxo3, data = donnees)
exemple = regsubsets(x = maxO3, data = donnees)
exemple = regsubsets(maxO3, data = donnees)
exemple = regsubsets(donnees$maxO3)
exemple = regsubsets(as.matrix(donnees[,-1]), data = donnees)
exemple = regsubsets(maxO3~., data = donnees[,-1])
plot(exemple, scale = "bic")
plot(exemple, scale = "Cp")
plot(exemple, scale = "r2")
plot(exemple, scale = "adjr2")
plot(exemple, scale = "bic")
plot(exemple, scale = "Cp")
plot(exemple, scale = "r2")
plot(exemple, scale = "adjr2")
exemple
?plot
plot.regsubsets
?plot.regsubsets
)
plot(exemple, scale = "bic")
plot(exemple, scale = "Cp")
plot(exemple, scale = "r2")
# Importer les donnÃ©es:
path<-"F:/MIASHS/TER/Vegeta/Anaelle/data/data_pour_model.csv"
donnees <- read.table(path,sep=",",dec=",",header=T)
head(donnees)
summary(donnees)
setwd("F:/MIASHS/TER/Vegeta/Anaelle")
# Transforme tout en numerique
for (i in 4:ncol(donnees)){
donnees[,i]<-as.numeric(as.character(donnees[,i]))}
# Rajout colonne mois:
donnees$mois = as.factor(as.character(strftime(strptime(donnees$dates,format = "%Y-%M-%d"),format = "%M")))
# Calcul des moyennes de sap flow par mois
data_month = aggregate(SAP_FLOW~mois + heure_solaire,data = donnees, FUN="mean")
data_month$heure_solaire = strptime(data_month$heure_solaire,format = "%H:%M:%S")
# plot
for(i in unique(data_month$mois)){
plot(y=data_month$SAP_FLOW[data_month$mois == i], x=data_month$heure_solaire[data_month$mois == i],type = "l",
xlab = "Heures",ylab="Sap Flow",main = i,ylim=c(0,10))
}
